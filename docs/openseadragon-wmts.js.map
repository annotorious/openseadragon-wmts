{"version":3,"file":"openseadragon-wmts.js","sources":["../node_modules/ol/xml.js","../node_modules/ol/format/XML.js","../node_modules/ol/format/xlink.js","../node_modules/ol/format/xsd.js","../node_modules/ol/format/OWS.js","../node_modules/ol/extent.js","../node_modules/ol/format/WMTSCapabilities.js","../src/WMTS.js","../node_modules/proj4/lib/global.js","../node_modules/proj4/lib/constants/values.js","../node_modules/proj4/lib/constants/PrimeMeridian.js","../node_modules/proj4/lib/constants/units.js","../node_modules/proj4/lib/match.js","../node_modules/proj4/lib/projString.js","../node_modules/wkt-parser/parser.js","../node_modules/wkt-parser/process.js","../node_modules/wkt-parser/index.js","../node_modules/proj4/lib/defs.js","../node_modules/proj4/lib/parseCode.js","../node_modules/proj4/lib/extend.js","../node_modules/proj4/lib/common/msfnz.js","../node_modules/proj4/lib/common/sign.js","../node_modules/proj4/lib/common/adjust_lon.js","../node_modules/proj4/lib/common/tsfnz.js","../node_modules/proj4/lib/common/phi2z.js","../node_modules/proj4/lib/projections/merc.js","../node_modules/proj4/lib/projections/longlat.js","../node_modules/proj4/lib/projections.js","../node_modules/proj4/lib/constants/Ellipsoid.js","../node_modules/proj4/lib/deriveConstants.js","../node_modules/proj4/lib/constants/Datum.js","../node_modules/proj4/lib/datum.js","../node_modules/proj4/lib/nadgrid.js","../node_modules/proj4/lib/Proj.js","../node_modules/proj4/lib/datumUtils.js","../node_modules/proj4/lib/datum_transform.js","../node_modules/proj4/lib/adjust_axis.js","../node_modules/proj4/lib/common/toPoint.js","../node_modules/proj4/lib/checkSanity.js","../node_modules/proj4/lib/transform.js","../node_modules/proj4/lib/core.js","../node_modules/mgrs/mgrs.js","../node_modules/proj4/lib/Point.js","../node_modules/proj4/lib/common/pj_enfn.js","../node_modules/proj4/lib/common/pj_mlfn.js","../node_modules/proj4/lib/common/pj_inv_mlfn.js","../node_modules/proj4/lib/projections/tmerc.js","../node_modules/proj4/lib/common/sinh.js","../node_modules/proj4/lib/common/hypot.js","../node_modules/proj4/lib/common/log1py.js","../node_modules/proj4/lib/common/asinhy.js","../node_modules/proj4/lib/common/gatg.js","../node_modules/proj4/lib/common/clens.js","../node_modules/proj4/lib/common/cosh.js","../node_modules/proj4/lib/common/clens_cmplx.js","../node_modules/proj4/lib/projections/etmerc.js","../node_modules/proj4/lib/common/adjust_zone.js","../node_modules/proj4/lib/projections/utm.js","../node_modules/proj4/lib/common/srat.js","../node_modules/proj4/lib/projections/gauss.js","../node_modules/proj4/lib/projections/sterea.js","../node_modules/proj4/lib/projections/stere.js","../node_modules/proj4/lib/projections/somerc.js","../node_modules/proj4/lib/projections/omerc.js","../node_modules/proj4/lib/projections/lcc.js","../node_modules/proj4/lib/projections/krovak.js","../node_modules/proj4/lib/common/mlfn.js","../node_modules/proj4/lib/common/e0fn.js","../node_modules/proj4/lib/common/e1fn.js","../node_modules/proj4/lib/common/e2fn.js","../node_modules/proj4/lib/common/e3fn.js","../node_modules/proj4/lib/common/gN.js","../node_modules/proj4/lib/common/adjust_lat.js","../node_modules/proj4/lib/common/imlfn.js","../node_modules/proj4/lib/projections/cass.js","../node_modules/proj4/lib/common/qsfnz.js","../node_modules/proj4/lib/projections/laea.js","../node_modules/proj4/lib/common/asinz.js","../node_modules/proj4/lib/projections/aea.js","../node_modules/proj4/lib/projections/gnom.js","../node_modules/proj4/lib/common/iqsfnz.js","../node_modules/proj4/lib/projections/cea.js","../node_modules/proj4/lib/projections/eqc.js","../node_modules/proj4/lib/projections/poly.js","../node_modules/proj4/lib/projections/nzmg.js","../node_modules/proj4/lib/projections/mill.js","../node_modules/proj4/lib/projections/sinu.js","../node_modules/proj4/lib/projections/moll.js","../node_modules/proj4/lib/projections/eqdc.js","../node_modules/proj4/lib/projections/vandg.js","../node_modules/proj4/lib/projections/aeqd.js","../node_modules/proj4/lib/projections/ortho.js","../node_modules/proj4/lib/projections/qsc.js","../node_modules/proj4/lib/projections/robin.js","../node_modules/proj4/lib/projections/geocent.js","../node_modules/proj4/lib/projections/tpers.js","../node_modules/proj4/projs.js","../node_modules/proj4/lib/index.js","../src/Transform.js","../src/index.js"],"sourcesContent":["/**\n * @module ol/xml\n */\nimport { extend } from './array.js';\n/**\n * When using {@link module:ol/xml.makeChildAppender} or\n * {@link module:ol/xml.makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node Node.\n */\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n/**\n * @type {string}\n */\nexport var XML_SCHEMA_INSTANCE_URI = 'http://www.w3.org/2001/XMLSchema-instance';\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n    return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n    return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n    if (node.nodeType == Node.CDATA_SECTION_NODE ||\n        node.nodeType == Node.TEXT_NODE) {\n        if (normalizeWhitespace) {\n            accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n        }\n        else {\n            accumulator.push(node.nodeValue);\n        }\n    }\n    else {\n        var n = void 0;\n        for (n = node.firstChild; n; n = n.nextSibling) {\n            getAllTextContent_(n, normalizeWhitespace, accumulator);\n        }\n    }\n    return accumulator;\n}\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n    return 'documentElement' in object;\n}\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n    return node.getAttributeNS(namespaceURI, name) || '';\n}\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n    return new DOMParser().parseFromString(xml, 'application/xml');\n}\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n            extend(array, value);\n        }\n    });\n}\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n            array.push(value);\n        }\n    });\n}\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            objectStack[objectStack.length - 1] = value;\n        }\n    });\n}\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [opt_property] Property.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n            var property = opt_property !== undefined ? opt_property : node.localName;\n            var array = void 0;\n            if (property in object) {\n                array = object[property];\n            }\n            else {\n                array = [];\n                object[property] = array;\n            }\n            array.push(value);\n        }\n    });\n}\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [opt_property] Property.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n            var property = opt_property !== undefined ? opt_property : node.localName;\n            object[property] = value;\n        }\n    });\n}\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [opt_this] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n    return function (node, value, objectStack) {\n        nodeWriter.call(opt_this !== undefined ? opt_this : this, node, value, objectStack);\n        var parent = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n        var parentNode = parent.node;\n        parentNode.appendChild(node);\n    };\n}\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml.serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [opt_this] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n    var serializersNS, nodeFactory;\n    return function (node, value, objectStack) {\n        if (serializersNS === undefined) {\n            serializersNS = {};\n            var serializers = {};\n            serializers[node.localName] = nodeWriter;\n            serializersNS[node.namespaceURI] = serializers;\n            nodeFactory = makeSimpleNodeFactory(node.localName);\n        }\n        serialize(serializersNS, nodeFactory, value, objectStack);\n    };\n}\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml.serialize} or {@link module:ol/xml.pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [opt_nodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [opt_namespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n    var fixedNodeName = opt_nodeName;\n    return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [opt_nodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, opt_nodeName) {\n        var context = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n        var node = context.node;\n        var nodeName = fixedNodeName;\n        if (nodeName === undefined) {\n            nodeName = opt_nodeName;\n        }\n        var namespaceURI = opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n        return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    });\n}\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport var OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n/**\n * Create an array of `values` to be used with {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n    var length = orderedKeys.length;\n    var sequence = new Array(length);\n    for (var i = 0; i < length; ++i) {\n        sequence[i] = object[orderedKeys[i]];\n    }\n    return sequence;\n}\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [opt_structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n    /**\n     * @type {Object<string, T>}\n     */\n    var structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n    var i, ii;\n    for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n        structureNS[namespaceURIs[i]] = structure;\n    }\n    return structureNS;\n}\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [opt_this] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n    var n;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n        var parsers = parsersNS[n.namespaceURI];\n        if (parsers !== undefined) {\n            var parser = parsers[n.localName];\n            if (parser !== undefined) {\n                parser.call(opt_this, n, objectStack);\n            }\n        }\n    }\n}\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [opt_this] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, opt_this) {\n    objectStack.push(object);\n    parseNode(parsersNS, node, objectStack, opt_this);\n    return /** @type {T} */ (objectStack.pop());\n}\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [opt_keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T} [opt_this] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n    var length = (opt_keys !== undefined ? opt_keys : values).length;\n    var value, node;\n    for (var i = 0; i < length; ++i) {\n        value = values[i];\n        if (value !== undefined) {\n            node = nodeFactory.call(opt_this !== undefined ? opt_this : this, value, objectStack, opt_keys !== undefined ? opt_keys[i] : undefined);\n            if (node !== undefined) {\n                serializersNS[node.namespaceURI][node.localName].call(opt_this, node, value, objectStack);\n            }\n        }\n    }\n}\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [opt_keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T} [opt_this] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(object, serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n    objectStack.push(object);\n    serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this);\n    return /** @type {O|undefined} */ (objectStack.pop());\n}\nvar xmlSerializer_ = undefined;\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n    xmlSerializer_ = xmlSerializer;\n}\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n    if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n        xmlSerializer_ = new XMLSerializer();\n    }\n    return xmlSerializer_;\n}\nvar document_ = undefined;\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n    document_ = document;\n}\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n    if (document_ === undefined && typeof document !== 'undefined') {\n        document_ = document.implementation.createDocument('', '', null);\n    }\n    return document_;\n}\n//# sourceMappingURL=xml.js.map","/**\n * @module ol/format/XML\n */\nimport { isDocument, parse } from '../xml.js';\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nvar XML = /** @class */ (function () {\n    function XML() {\n    }\n    /**\n     * Read the source document.\n     *\n     * @param {Document|Element|string} source The XML source.\n     * @return {Object} An object representing the source.\n     * @api\n     */\n    XML.prototype.read = function (source) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readFromDocument(/** @type {Document} */ (source));\n        }\n        else {\n            return this.readFromNode(/** @type {Element} */ (source));\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {Object} Object\n     */\n    XML.prototype.readFromDocument = function (doc) {\n        for (var n = doc.firstChild; n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                return this.readFromNode(/** @type {Element} */ (n));\n            }\n        }\n        return null;\n    };\n    /**\n     * @abstract\n     * @param {Element} node Node.\n     * @return {Object} Object\n     */\n    XML.prototype.readFromNode = function (node) { };\n    return XML;\n}());\nexport default XML;\n//# sourceMappingURL=XML.js.map","/**\n * @module ol/format/xlink\n */\n/**\n * @const\n * @type {string}\n */\nvar NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n/**\n * @param {Element} node Node.\n * @return {string|undefined} href.\n */\nexport function readHref(node) {\n    return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n//# sourceMappingURL=xlink.js.map","/**\n * @module ol/format/xsd\n */\nimport { getAllTextContent, getDocument } from '../xml.js';\nimport { padNumber } from '../string.js';\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n    var s = getAllTextContent(node, false);\n    return readBooleanString(s);\n}\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n    var m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n    if (m) {\n        return m[1] !== undefined || false;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n    var s = getAllTextContent(node, false);\n    var dateTime = Date.parse(s);\n    return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n    var s = getAllTextContent(node, false);\n    return readDecimalString(s);\n}\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n    // FIXME check spec\n    var m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n    if (m) {\n        return parseFloat(m[1]);\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readPositiveInteger(node) {\n    var s = getAllTextContent(node, false);\n    return readNonNegativeIntegerString(s);\n}\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n    var m = /^\\s*(\\d+)\\s*$/.exec(string);\n    if (m) {\n        return parseInt(m[1], 10);\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n    return getAllTextContent(node, false).trim();\n}\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n    writeStringTextNode(node, bool ? '1' : '0');\n}\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n    node.appendChild(getDocument().createCDATASection(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n    var date = new Date(dateTime * 1000);\n    var string = date.getUTCFullYear() +\n        '-' +\n        padNumber(date.getUTCMonth() + 1, 2) +\n        '-' +\n        padNumber(date.getUTCDate(), 2) +\n        'T' +\n        padNumber(date.getUTCHours(), 2) +\n        ':' +\n        padNumber(date.getUTCMinutes(), 2) +\n        ':' +\n        padNumber(date.getUTCSeconds(), 2) +\n        'Z';\n    node.appendChild(getDocument().createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n    var string = decimal.toPrecision();\n    node.appendChild(getDocument().createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n    var string = nonNegativeInteger.toString();\n    node.appendChild(getDocument().createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n    node.appendChild(getDocument().createTextNode(string));\n}\n//# sourceMappingURL=xsd.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/OWS\n */\nimport XML from './XML.js';\nimport { makeObjectPropertyPusher, makeObjectPropertySetter, makeStructureNS, pushParseAndPop, } from '../xml.js';\nimport { readHref } from './xlink.js';\nimport { readString } from './xsd.js';\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n    'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n    'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata),\n});\nvar OWS = /** @class */ (function (_super) {\n    __extends(OWS, _super);\n    function OWS() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @param {Element} node Node.\n     * @return {Object} Object\n     */\n    OWS.prototype.readFromNode = function (node) {\n        var owsObject = pushParseAndPop({}, PARSERS, node, []);\n        return owsObject ? owsObject : null;\n    };\n    return OWS;\n}(XML));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'DeliveryPoint': makeObjectPropertySetter(readString),\n    'City': makeObjectPropertySetter(readString),\n    'AdministrativeArea': makeObjectPropertySetter(readString),\n    'PostalCode': makeObjectPropertySetter(readString),\n    'Country': makeObjectPropertySetter(readString),\n    'ElectronicMailAddress': makeObjectPropertySetter(readString),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar ALLOWED_VALUES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Value': makeObjectPropertyPusher(readValue),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar CONSTRAINT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'AllowedValues': makeObjectPropertySetter(readAllowedValues),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar CONTACT_INFO_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Phone': makeObjectPropertySetter(readPhone),\n    'Address': makeObjectPropertySetter(readAddress),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar DCP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'HTTP': makeObjectPropertySetter(readHttp),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Get': makeObjectPropertyPusher(readGet),\n    'Post': undefined, // TODO\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar OPERATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'DCP': makeObjectPropertySetter(readDcp),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar OPERATIONS_METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Operation': readOperation,\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar PHONE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Voice': makeObjectPropertySetter(readString),\n    'Facsimile': makeObjectPropertySetter(readString),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar REQUEST_METHOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Constraint': makeObjectPropertyPusher(readConstraint),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar SERVICE_CONTACT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'IndividualName': makeObjectPropertySetter(readString),\n    'PositionName': makeObjectPropertySetter(readString),\n    'ContactInfo': makeObjectPropertySetter(readContactInfo),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar SERVICE_IDENTIFICATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Abstract': makeObjectPropertySetter(readString),\n    'AccessConstraints': makeObjectPropertySetter(readString),\n    'Fees': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'ServiceTypeVersion': makeObjectPropertySetter(readString),\n    'ServiceType': makeObjectPropertySetter(readString),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar SERVICE_PROVIDER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ProviderName': makeObjectPropertySetter(readString),\n    'ProviderSite': makeObjectPropertySetter(readHref),\n    'ServiceContact': makeObjectPropertySetter(readServiceContact),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n    return pushParseAndPop({}, ADDRESS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n    return pushParseAndPop({}, ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n    var name = node.getAttribute('name');\n    if (!name) {\n        return undefined;\n    }\n    return pushParseAndPop({ 'name': name }, CONSTRAINT_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n    return pushParseAndPop({}, CONTACT_INFO_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n    return pushParseAndPop({}, DCP_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n    var href = readHref(node);\n    if (!href) {\n        return undefined;\n    }\n    return pushParseAndPop({ 'href': href }, REQUEST_METHOD_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n    return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n    var name = node.getAttribute('name');\n    var value = pushParseAndPop({}, OPERATION_PARSERS, node, objectStack);\n    if (!value) {\n        return undefined;\n    }\n    var object = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    object[name] = value;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n    return pushParseAndPop({}, OPERATIONS_METADATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n    return pushParseAndPop({}, PHONE_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n    return pushParseAndPop({}, SERVICE_IDENTIFICATION_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n    return pushParseAndPop({}, SERVICE_CONTACT_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n    return pushParseAndPop({}, SERVICE_PROVIDER_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n    return readString(node);\n}\nexport default OWS;\n//# sourceMappingURL=OWS.js.map","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport { assert } from './asserts.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value,\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return (extent1[0] <= extent2[0] &&\n        extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] &&\n        extent2[3] <= extent1[3]);\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return (extent1[0] == extent2[0] &&\n        extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] &&\n        extent1[3] == extent2[3]);\n}\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n    return (Math.abs(extent1[0] - extent2[0]) < tolerance &&\n        Math.abs(extent1[2] - extent2[2]) < tolerance &&\n        Math.abs(extent1[1] - extent2[1]) < tolerance &&\n        Math.abs(extent1[3] - extent2[3]) < tolerance);\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = (resolution * size[0]) / 2;\n    var dy = (resolution * size[1]) / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return (extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1]);\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - (endY - maxY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - (endX - maxX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - (endY - minY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - (endX - minX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n    var coordinates = [];\n    if (opt_stops > 1) {\n        var width = extent[2] - extent[0];\n        var height = extent[3] - extent[1];\n        for (var i = 0; i < opt_stops; ++i) {\n            coordinates.push(extent[0] + (width * i) / opt_stops, extent[1], extent[2], extent[1] + (height * i) / opt_stops, extent[2] - (width * i) / opt_stops, extent[3], extent[0], extent[3] - (height * i) / opt_stops);\n        }\n    }\n    else {\n        coordinates = [\n            extent[0],\n            extent[1],\n            extent[2],\n            extent[1],\n            extent[2],\n            extent[3],\n            extent[0],\n            extent[3],\n        ];\n    }\n    transformFn(coordinates, coordinates, 2);\n    var xs = [];\n    var ys = [];\n    for (var i = 0, l = coordinates.length; i < l; i += 2) {\n        xs.push(coordinates[i]);\n        ys.push(coordinates[i + 1]);\n    }\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n    var projectionExtent = projection.getExtent();\n    var center = getCenter(extent);\n    if (projection.canWrapX() &&\n        (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.floor((center[0] - projectionExtent[0]) / worldWidth);\n        var offset = worldsAway * worldWidth;\n        extent[0] -= offset;\n        extent[2] -= offset;\n    }\n    return extent;\n}\n//# sourceMappingURL=extent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/WMTSCapabilities\n */\nimport OWS from './OWS.js';\nimport XML from './XML.js';\nimport { boundingExtent } from '../extent.js';\nimport { makeArrayPusher, makeObjectPropertyPusher, makeObjectPropertySetter, makeStructureNS, pushParseAndPop, } from '../xml.js';\nimport { readDecimal, readPositiveInteger, readString } from './xsd.js';\nimport { readHref } from './xlink.js';\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [null, 'http://www.opengis.net/wmts/1.0'];\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar OWS_NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Contents': makeObjectPropertySetter(readContents),\n});\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nvar WMTSCapabilities = /** @class */ (function (_super) {\n    __extends(WMTSCapabilities, _super);\n    function WMTSCapabilities() {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {OWS}\n         * @private\n         */\n        _this.owsParser_ = new OWS();\n        return _this;\n    }\n    /**\n     * @param {Element} node Node.\n     * @return {Object} Object\n     */\n    WMTSCapabilities.prototype.readFromNode = function (node) {\n        var version = node.getAttribute('version');\n        if (version) {\n            version = version.trim();\n        }\n        var WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n        if (!WMTSCapabilityObject) {\n            return null;\n        }\n        WMTSCapabilityObject['version'] = version;\n        WMTSCapabilityObject = pushParseAndPop(WMTSCapabilityObject, PARSERS, node, []);\n        return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n    };\n    return WMTSCapabilities;\n}(XML));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar CONTENTS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Layer': makeObjectPropertyPusher(readLayer),\n    'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LAYER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl),\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readBoundingBox),\n    'Identifier': makeObjectPropertySetter(readString),\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl),\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar TMS_LINKS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'TileMatrixSet': makeObjectPropertySetter(readString),\n    'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar TMS_LIMITS_LIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar TMS_LIMITS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'TileMatrix': makeObjectPropertySetter(readString),\n    'MinTileRow': makeObjectPropertySetter(readPositiveInteger),\n    'MaxTileRow': makeObjectPropertySetter(readPositiveInteger),\n    'MinTileCol': makeObjectPropertySetter(readPositiveInteger),\n    'MaxTileCol': makeObjectPropertySetter(readPositiveInteger),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar DIMENSION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString),\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar WGS84_BBOX_READERS = makeStructureNS(OWS_NAMESPACE_URIS, {\n    'LowerCorner': makeArrayPusher(readCoordinates),\n    'UpperCorner': makeArrayPusher(readCoordinates),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar TMS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix),\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n    'BoundingBox': makeObjectPropertySetter(readBoundingBox),\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar TM_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readPositiveInteger),\n    'TileHeight': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixWidth': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixHeight': makeObjectPropertySetter(readPositiveInteger),\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n    return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n    return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n    return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n    var style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n    if (!style) {\n        return undefined;\n    }\n    var isDefault = node.getAttribute('isDefault') === 'true';\n    style['isDefault'] = isDefault;\n    return style;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n    return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n    return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n    var format = node.getAttribute('format');\n    var template = node.getAttribute('template');\n    var resourceType = node.getAttribute('resourceType');\n    var resource = {};\n    if (format) {\n        resource['format'] = format;\n    }\n    if (template) {\n        resource['template'] = template;\n    }\n    if (resourceType) {\n        resource['resourceType'] = resourceType;\n    }\n    return resource;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBox(node, objectStack) {\n    var coordinates = pushParseAndPop([], WGS84_BBOX_READERS, node, objectStack);\n    if (coordinates.length != 2) {\n        return undefined;\n    }\n    return boundingExtent(coordinates);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n    var legend = {};\n    legend['format'] = node.getAttribute('format');\n    legend['href'] = readHref(node);\n    return legend;\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n    var coordinates = readString(node).split(/\\s+/);\n    if (!coordinates || coordinates.length != 2) {\n        return undefined;\n    }\n    var x = +coordinates[0];\n    var y = +coordinates[1];\n    if (isNaN(x) || isNaN(y)) {\n        return undefined;\n    }\n    return [x, y];\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n    return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n    return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n    return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\nexport default WMTSCapabilities;\n//# sourceMappingURL=WMTSCapabilities.js.map","import WMTSCapabilities from 'ol/format/WMTSCapabilities';\n\nexport const parseCapabilities = (response, args) => {\n\n  const parser = new WMTSCapabilities();\n\n  const capabilities = parser.read(response);\n  \n  // Pick layer by name or (default) take first in list\n  const Layer = args?.layer ? \n    capabilities.Contents.Layer.find(l => l.Title === args.layer) :\n    capabilities.Contents.Layer[0];\n\n  const Style = args?.style || \n    Layer.Style.find(s => s.isDefault).Identifier;\n\n  const TileUrlTemplate = \n    Layer.ResourceURL[0].template;\n\n  const TileMatrixSetLink = \n    Layer.TileMatrixSetLink[0].TileMatrixSet;\n\n  const TileMatrixSet =\n    capabilities.Contents.TileMatrixSet.find(s => s.Identifier === TileMatrixSetLink);\n\n  const { TileMatrix } = TileMatrixSet;\n\n  const { \n    TileWidth, \n    TileHeight, \n    MatrixWidth, \n    MatrixHeight,\n    TopLeftCorner \n  } = TileMatrix[ Math.min(20, TileMatrix.length - 1) ];\n\n  return {\n    tileSource: {\n      width: MatrixWidth * TileWidth,\n      height: MatrixHeight * TileHeight,\n      tileWidth: TileWidth,\n      tileHeight: TileHeight,\n      minLevel: 8,\n\n      getTileUrl: (level, x, y) => TileUrlTemplate\n        .replace('{Style}', Style)\n        .replace('{TileMatrixSet}', TileMatrixSetLink)\n        .replace('{TileMatrix}', level - 8)\n        .replace('{TileCol}', x)\n        .replace('{TileRow}', y)\n    },\n\n    // Should be [ minLon, minLat, maxLon, maxLat ]\n    mapBounds: Layer.WGS84BoundingBox,\n\n    projection: {\n      code: TileMatrixSet.SupportedCRS,\n      extent: [ 2 * Math.abs(TopLeftCorner[0]), 2 * Math.abs(TopLeftCorner[1]) ]\n    }\n    \n  }\n\n}","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0;  // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314;  // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function() {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"598.1,73.7,418.2,0.202,0.045,-2.455,6.7\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n","import {PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\nvar loadedNadgrids = {};\n\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  if (header.nSubgrids > 1) {\n    console.log('Only single NTv2 subgrids are currently supported, subsequent sub grids are ignored');\n  }\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {header: header, subgrids: subgrids};\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) { return null; }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return {name: 'null', mandatory: !optional, grid: null, isNull: true};\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian),\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n  }\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];});\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian),\n    };\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport {getNadgrids} from \"./nadgrid\";\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = {x: -point.x, y: point.y};\n  var output = {x: Number.NaN, y: Number.NaN};\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    onlyMandatoryGrids = grid.mandatory;\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n      continue;\n    }\n    var subgrid = grid.grid.subgrids[0];\n    // skip tables that don't match our point at all\n    var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n    var minX = subgrid.ll[0] - epsilon;\n    var minY = subgrid.ll[1] - epsilon;\n    var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n    var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n    if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x ) {\n      continue;\n    }\n    output = applySubgridShift(input, inverse, subgrid);\n    if (!isNaN(output.x)) {\n      break;\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\"+\n      -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {x: Number.NaN, y: Number.NaN};\n  if (isNaN(pin.x)) { return val; }\n  var tb = {x: pin.x, y: pin.y};\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n      dif = {x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y)};\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {x: pin.x / ct.del[0], y: pin.y / ct.del[1]};\n  var indx = {x: Math.floor(t.x), y: Math.floor(t.y)};\n  var frct = {x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y};\n  var val= {x: Number.NaN, y: Number.NaN};\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx++;\n  var f10= {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx += ct.lim[0];\n  var f11 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx--;\n  var f01 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n\n    }\n    else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || {x: NaN, y: NaN};\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.splice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.splice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.splice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  \n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {  \n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0, AB;\n  \n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  \n  var alp = false;\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n  \n  if (gam) {\n    gamma = (this.rectified_grid_angle * D2R);\n  }\n  \n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n    \n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||\n        Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL ||\n        Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n  \n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n  \n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D -1;\n    \n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n    \n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n  \n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n    \n    if (con < -Math.pi) {\n      lam2 -=TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n    \n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n  \n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  \n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n  \n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n    \n    if (this.lat0 < 0) {\n      this.u_0 = - this.u_0;\n    }  \n  }\n    \n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n  \n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    \n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n        \n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n    \n    v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));\n    temp = Math.cos(this.B * p.x);\n    \n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }    \n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n     \n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n  \n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n  \n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  \n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n  \n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n  \n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n    \n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n        \n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n  \n  coords.x += this.lam0;\n  \n  return coords;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n  \n  //double lat0;                    /* the reference latitude               */\n  //double long0;                   /* the reference longitude              */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n  \n  //the above value can be set with proj4.defs\n  //example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  \"Lambert Tangential Conformal Conic Projection\",\n  \"Lambert_Conformal_Conic\",\n  \"Lambert_Conformal_Conic_1SP\",\n  \"Lambert_Conformal_Conic_2SP\",\n  \"lcc\"\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n    geodeticToGeocentric,\n    geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n    this.name = 'geocent';\n\n}\n\nexport function forward(p) {\n    var point = geodeticToGeocentric(p, this.es, this.a);\n    return point;\n}\n\nexport function inverse(p) {\n    var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n    return point;\n}\n\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};","\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\n\nvar params = {\n  h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7\n  azi:   { def: 0, num: true, degrees: true }, // default is North\n  tilt:  { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic\n  lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n  \n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt \n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n}","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n","import proj4 from 'proj4';\n\nproj4.defs('urn:ogc:def:crs:EPSG:6.18.3:3857', proj4.defs('EPSG:3857'));\nproj4.defs('urn:ogc:def:crs:EPSG:3857', proj4.defs('EPSG:3857'));\nproj4.defs('urn:ogc:def:crs:EPSG::3857', proj4.defs('EPSG:3857'));\n\nexport const imageToLonLat = (viewport, projection, offset = { x: 0, y: 0 }) => xy => {\n  const pt = viewport.imageToViewportCoordinates(xy[0] + offset.x, xy[1] + offset.y);\n  return viewportToLonLat(projection)([ pt.x, pt.y ]);\n}\n\nexport const lonLatToImageCoordinates = (viewport, projection, offset = { x: 0, y: 0 }) => lonLat => {\n  const pt = lonLatToViewportCoordinates(projection)(lonLat);\n  const { x, y } = viewport.viewportToImageCoordinates(pt[0], pt[1]);\n  return [ x - offset.x, y - offset.y ];\n}\n\nexport const lonLatToMapCoordinates = projection => lonLat =>\n  proj4('EPSG:4326', projection.code, lonLat);\n\nexport const lonLatToViewportCoordinates = projection => lonLat => {\n  const eastNorth = proj4('EPSG:4326', projection.code, lonLat);\n  return mapToViewportCoordinates(projection.extent)(eastNorth);\n}\n\nexport const mapToLonLat = projection => eastNorth =>\n  proj4(projection.code, 'EPSG:4326', eastNorth);\n\nexport const mapToViewportCoordinates = worldExtent => eastNorth => {\n  const [ east, north ] = eastNorth;\n  const [ worldWidth, worldHeight ] = worldExtent;\n\n  const [ falseEast, falseNorth ] = [ worldWidth / 2, worldHeight / 2 ];\n\n  const x = east + falseEast;\n  const y = falseNorth - north;\n\n  return [ x / worldWidth, y / worldHeight ];\n}\n\nexport const viewportToLonLat = projection => xy => {\n  const en = viewportToMapCoordinates(projection.extent)(xy);\n  return proj4(projection.code, 'EPSG:4326', en);\n}\n\nexport const viewportToMapCoordinates = worldExtent => xy => {\n  const [ x, y ] = xy;\n\n  const [ worldWidth, worldHeight ] = worldExtent;\n\n  const [ falseEast, falseNorth ] = [ worldWidth / 2, worldHeight / 2 ];\n\n  const east = x * worldWidth - falseEast;\n  const north = falseNorth - y * worldHeight;\n\n  return [ east, north ];\n}\n\n\n\n\n\n","import { parseCapabilities } from './WMTS';\nimport {\n  imageToLonLat,\n  lonLatToImageCoordinates,\n  lonLatToMapCoordinates,\n  lonLatToViewportCoordinates,\n  mapToLonLat,\n  mapToViewportCoordinates,\n  viewportToLonLat,\n  viewportToMapCoordinates\n} from './Transform';\n\nconst OpenSeadragonWMTS = (viewer, args) => {\n\n  const { url } = args;\n\n  // Return after map has loaded\n  return new Promise((resolve, reject) => {\n    fetch(url)\n      .then(response => response.text())\n      .then(text => {\n        const { tileSource, mapBounds, projection } = parseCapabilities(text, args);\n\n        const topLeft = lonLatToViewportCoordinates(projection)([\n          Math.min(mapBounds[0], mapBounds[2]),\n          Math.max(mapBounds[3], mapBounds[1])\n        ]);\n\n        const bottomRight = lonLatToViewportCoordinates(projection)([\n          Math.max(mapBounds[2], mapBounds[0]),\n          Math.min(mapBounds[3], mapBounds[1])\n        ]);\n\n        viewer.addTiledImage({ \n          tileSource,        \n          success: () => {\n            const viewportRegion = new OpenSeadragon.Rect(topLeft[0], topLeft[1], bottomRight[0] - topLeft[0], bottomRight[1] - topLeft[1]);\n            viewer.viewport.fitBounds(viewportRegion, true);\n\n            const imageTopLeft = viewer.viewport.viewportToImageCoordinates(topLeft[0], topLeft[1]);\n            const imageBottomRight = viewer.viewport.viewportToImageCoordinates(bottomRight[0], bottomRight[1]);\n\n            const imageRegion = {\n              x: imageTopLeft.x,\n              y: imageTopLeft.y,\n              width: imageBottomRight.x - imageTopLeft.x,\n              height: imageBottomRight.y - imageTopLeft.y\n            }\n            \n            resolve({\n              // Useful metadata\n              mapBounds,\n              viewportRegion,\n              imageRegion,\n\n              // Image coordinate space transforms\n              imageToLonLat: imageToLonLat(viewer.viewport, projection),\n              imageRegionToLonLat: imageToLonLat(viewer.viewport, projection, imageTopLeft),\n              lonLatToImage: lonLatToImageCoordinates(viewer.viewport, projection),\n              lonLatToImageRegion: lonLatToImageCoordinates(viewer.viewport, projection, imageTopLeft),\n\n              // Map and viewport coordinate space transforms\n              mapToLonLat: mapToLonLat(projection),\n              mapToViewportCoordinates: mapToViewportCoordinates(projection.extent),\n              lonLatToMapCoordinates: lonLatToMapCoordinates(projection),\n              lonLatToViewportCoordinates: lonLatToViewportCoordinates(projection),\n              viewportToLonLat: viewportToLonLat(projection),\n              viewportToMapCoordinates: viewportToMapCoordinates(projection.extent)\n            });\n          },\n          error: e => reject(e)\n        });\n        \n      });\n  });\n\n}\n\nexport default OpenSeadragonWMTS;\n"],"names":["getAllTextContent","node","normalizeWhitespace","getAllTextContent_","accumulator","n","isDocument","object","parse","xml","makeArrayPusher","valueReader","opt_this","objectStack","value","array","makeObjectPropertyPusher","opt_property","property","makeObjectPropertySetter","makeStructureNS","namespaceURIs","structure","opt_structureNS","structureNS","i","ii","parseNode","parsersNS","parsers","parser","pushParseAndPop","XML","source","doc","XML$1","NAMESPACE_URI","readHref","readDecimal","s","readDecimalString","string","m","readPositiveInteger","readNonNegativeIntegerString","readString","__extends","this","extendStatics","d","b","p","__","NAMESPACE_URIS","PARSERS","readServiceIdentification","readServiceProvider","readOperationsMetadata","OWS","_super","owsObject","ADDRESS_PARSERS","ALLOWED_VALUES_PARSERS","readValue","CONSTRAINT_PARSERS","readAllowedValues","CONTACT_INFO_PARSERS","readPhone","readAddress","DCP_PARSERS","readHttp","HTTP_PARSERS","readGet","OPERATION_PARSERS","readDcp","OPERATIONS_METADATA_PARSERS","readOperation","PHONE_PARSERS","REQUEST_METHOD_PARSERS","readConstraint","SERVICE_CONTACT_PARSERS","readContactInfo","SERVICE_IDENTIFICATION_PARSERS","SERVICE_PROVIDER_PARSERS","readServiceContact","name","href","OWS$1","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","coordinate","OWS_NAMESPACE_URIS","readContents","WMTSCapabilities","_this","version","WMTSCapabilityObject","CONTENTS_PARSERS","readLayer","readTileMatrixSet","LAYER_PARSERS","readStyle","readTileMatrixSetLink","readDimensions","readResourceUrl","readBoundingBox","STYLE_PARSERS","readLegendUrl","TMS_LINKS_PARSERS","readTileMatrixLimitsList","TMS_LIMITS_LIST_PARSERS","readTileMatrixLimits","TMS_LIMITS_PARSERS","DIMENSION_PARSERS","WGS84_BBOX_READERS","readCoordinates","TMS_PARSERS","readTileMatrix","TM_PARSERS","style","isDefault","format","template","resourceType","resource","legend","x","y","WMTSCapabilities$1","parseCapabilities","response","args","capabilities","Layer","l","Style","TileUrlTemplate","TileMatrixSetLink","TileMatrixSet","TileMatrix","TileWidth","TileHeight","MatrixWidth","MatrixHeight","TopLeftCorner","level","globals","defs","PJD_3PARAM","PJD_7PARAM","PJD_GRIDSHIFT","PJD_WGS84","PJD_NODATUM","SRS_WGS84_SEMIMAJOR","SRS_WGS84_SEMIMINOR","SRS_WGS84_ESQUARED","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","exports","units","ignoredChar","match","obj","key","keys","lkey","testkey","processedKey","projStr","defData","self","paramObj","v","a","split","paramName","paramVal","paramOutname","params","unit","pm","PrimeMeridian","legalAxis","NEUTRAL","KEYWORD","NUMBER","QUOTED","AFTERQUOTE","ENDED","whitespace","latin","keyword","endThings","digets","Parser","text","char","newObjects","parseString","txt","mapit","thing","out","newObj","item","sExpr","rename","outName","inName","d2r","input","cleanWKT","wkt","axisOrder","axis","geogcs","toMeter","ratio","renamer","list","lisp","type","that","def","parseProj","testObj","code","testDef","codeWords","testWKT","word","codes","checkMercator","auth","checkProjStr","ext","testProj","maybeProjStr","extend","destination","msfnz","eccent","sinphi","cosphi","con","sign","adjust_lon","tsfnz","phi","com","phi2z","ts","eccnth","dphi","init","forward","lon","lat","inverse","names","merc","identity","pt","longlat","projs","projStore","add","proj","len","get","start","projections","WGS84","eccentricity","rf","R_A","a2","b2","es","e","ep2","sphere","ellps","ellipse","Ellipsoid","datum","datumCode","datum_params","nadgrids","loadedNadgrids","nadgrid","data","view","isLittleEndian","detectLittleEndian","header","readHeader","subgrids","readSubgrids","getNadgrids","grids","parseNadgridString","optional","secondsToRadians","seconds","nFields","decodeString","end","gridOffset","subHeader","readGridHeader","nodes","readGridNodes","lngColumnCount","latColumnCount","mapNodes","r","offset","gridHeader","nodesOffset","gridRecordLength","gridShiftRecords","record","Projection","srsCode","callback","error","json","parseCode","ourProj","datumDef","Datum","sphere_","dc_sphere","ecc","dc_eccentricity","datumObj","compareDatums","dest","geodeticToGeocentric","Longitude","Latitude","Height","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","geocentricToGeodetic","genau","genau2","maxiter","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","X","Y","Z","geocentricToWgs84","datum_type","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricFromWgs84","x_tmp","y_tmp","z_tmp","checkParams","datum_transform","point","source_a","source_es","gridShiftCode","applyGridShift","dest_a","dest_b","dest_es","destGridShiftResult","output","attemptedGrids","grid","subgrid","epsilon","minX","minY","maxX","maxY","applySubgridShift","pin","ct","val","tb","t","nadInterpolate","tol","dif","del","indx","frct","inx","f00","f10","f11","f01","m11","m10","m00","m01","adjust_axis","crs","denorm","xin","yin","zin","common","checkSanity","checkCoord","num","checkNotWGS","transform","enforceAxis","wgs84","toPoint","transformer","from","to","coords","transformedArray","checkProj","proj4","fromProj","toProj","coord","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","A","I","O","V","mgrs","ll","accuracy","encode","LLtoUTM","bbox","UTMtoLL","decode","degToRad","deg","radToDeg","rad","Lat","Long","eccSquared","k0","LongOrigin","eccPrimeSquared","N","T","C","M","LatRad","LongRad","LongOriginRad","ZoneNumber","UTMEasting","UTMNorthing","getLetterDesignator","utm","zoneLetter","zoneNumber","e1","N1","T1","C1","R1","D","mu","phi1Rad","result","topRight","LetterDesignator","seasting","snorthing","get100kID","easting","northing","setParm","get100kSetForZone","setColumn","setRow","getLetter100kID","column","row","parm","index","colOrigin","rowOrigin","colInt","rowInt","rollover","twoLetter","mgrsString","length","hunK","sb","testChar","set","east100k","getEastingFromChar","north100k","getNorthingFromChar","getMinNorthing","remainder","sep","sepEasting","sepNorthing","accuracyBonus","sepEastingString","sepNorthingString","curCol","eastingValue","rewindMarker","curRow","northingValue","Point","z","mgrsStr","C00","C02","C04","C06","C08","C22","C44","C46","C48","C66","C68","C88","pj_enfn","en","pj_mlfn","sphi","cphi","MAX_ITER","pj_inv_mlfn","arg","k","delta_lon","sin_phi","cos_phi","al","als","cs","tq","ml","tan_phi","c","ds","f","g","temp","h","tmerc","sinh","hypot","log1py","asinhy","gatg","pp","B","cos_2B","h1","h2","clens","arg_r","hr1","hr2","hr","cosh","clens_cmplx","arg_i","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","j","hi1","hi","hi2","np","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","tmp","etmerc","adjust_zone","zone","dependsOn","srat","esinp","exp","DEL_TOL","gauss","sinc","cosc","cosl","rho","sterea","ssfn_","phit","eccen","sinlat","coslat","sinX","cosX","rh","dlon","ce","Chi","stere","phy0","sinPhy0","semiMajorAxis","invF","flattening","e2","k1","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","somerc","TOL","isTypeA","typeAProjections","projectionName","cosph0","F","H","L","sinph0","J","gamma","gamma0","lamc","lam1","lam2","phi1","phi2","alpha_c","alp","gam","one_es","U","W","u","Qp","Sp","Tp","Vp","Up","omerc","sin1","cos1","ms1","ts1","sin2","cos2","ms2","ts2","ts0","rh1","theta","lcc","gfi","deltav","eps","ro","fi1","ok","krovak","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","lam","nl","tl","asq","cl","dd","ml1","nl1","rl1","tl1","dl","dsq","cass","qsfnz","S_POLE","N_POLE","EQUIT","OBLIQ","authset","coslam","sinlam","q","sinb","cosb","cCe","sCe","ab","cosz","sinz","authlat","P00","P01","P02","P10","P11","P20","APA","beta","laea","asinz","qs","phi1z","eccnts","aea","coslon","ksp","gnom","iqsfnz","cea","dlat","eqc","el","bl","tanphi","mln","mlnp","ma","poly","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_re","th_im","th_n_re","th_n_im","th_n_re1","th_n_im1","z_re","z_im","delta_x","delta_y","z_n_re","z_n_im","z_n_re1","z_n_im1","num_re","num_im","den_re","den_im","den2","d_psi_n","nzmg","mill","sinu","delta_theta","moll","eqdc","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","vandg","Mlp","Ml","Nl1","Nl","psi","Az","G","GH","Hs","kp","cos_c","s2","s3","s4","s5","cosAz","Ee","sinpsi","aeqd","ortho","FACE_ENUM","AREA_ENUM","xy","area","sinlon","qsc_shift_lon_origin","qsc_fwd_equat_face_theta","lp","nu","cosmu","tannu","tantheta","invert_sign","xa","slon","qsc","COEFS_X","COEFS_Y","FXC","FYC","RC1","NODES","poly3_val","coefs","poly3_der","newton_rapshon","f_df","max_err","iters","upd","robin","geocent","mode","omega","yt","ba","bm","bq","tpers","includedProjections","Proj","imageToLonLat","viewport","projection","viewportToLonLat","lonLatToImageCoordinates","lonLat","lonLatToViewportCoordinates","lonLatToMapCoordinates","eastNorth","mapToViewportCoordinates","mapToLonLat","worldExtent","east","north","worldWidth","worldHeight","falseEast","falseNorth","viewportToMapCoordinates","OpenSeadragonWMTS","viewer","url","resolve","reject","tileSource","mapBounds","topLeft","bottomRight","viewportRegion","imageTopLeft","imageBottomRight","imageRegion"],"mappings":"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"}